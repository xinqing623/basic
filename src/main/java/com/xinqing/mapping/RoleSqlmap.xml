<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinqing.mapping.RoleMapper">
	<resultMap id="BaseResultMap" type="com.xinqing.entity.Role">
		<result column="pk_id" property="pkId" ></result>
		<result column="role_name" property="roleName" ></result>
		<result column="remark" property="remark" ></result>
		<result column="create_time" property="createTime" ></result>
	</resultMap>
	<sql id="Base_Column_List">
			pk_id,
			role_name,
			remark,
			create_time
	</sql>
	
	<select id="selectByPK" parameterType = "String" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"></include>
		from role
		where pk_id = #{pkId}
	</select>
	
	<select id="selectRoles" parameterType = "String" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"></include>
		from role
		where pk_id in (replace(CONCAT('''', ${pkId}, ''''), ',', ''','''))
	</select>
	
	<select id="select" parameterType = "HashMap" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"></include>
		from role
		where 1=1
		<if test="pkId != null and pkId != '' ">
			and pk_id = #{pkId}
		</if>
		<if test="roleName != null and roleName != '' ">
			and role_name = #{roleName}
		</if>
		<if test="remark != null and remark != '' ">
			and remark = #{remark}
		</if>
		<if test="createTime != null and createTime != '' ">
			and create_time = #{createTime}
		</if>
	</select>
	
	<insert id="insert" parameterType="com.xinqing.entity.Role">
           insert into role(<include refid="Base_Column_List"></include>) 
               values(
					#{pkId},
					#{roleName},
					#{remark},
					#{createTime}
               )
	</insert>
	
	<update id="update" parameterType="com.xinqing.entity.Role">
           update role
		   <set>
	           		<if test="pkId != null">
	           		pk_id = #{pkId},
	           		</if>
	           		<if test="roleName != null">
	           		role_name = #{roleName},
	           		</if>
	           		<if test="remark != null">
	           		remark = #{remark},
	           		</if>
					<if test="createTime != null">
	           		create_time = #{createTime}
	           		</if>
		   </set>
           where pk_id = #{pkId}
   </update>
	
	<delete id="delete" parameterType="String">
		delete from role where pk_id = #{pkId};
	</delete>
	
</mapper>
